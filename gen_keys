#!/bin/bash

AVBTOOL=.bin/avbtool
hash="-sha256"
output_dir="../../security/pixys"

# Create the output directory if it doesn't exist
mkdir -p ${output_dir}

# Certificate subject details
subject="/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com"
for cert in $(cat _data/cert_keys.txt); do
    key_platform="${output_dir}/${cert}.pem"
    cert_file="${output_dir}/${cert}.x509.pem"
    if [ ! -f ${key_platform} ]; then
        openssl genrsa -out ${key_platform} -f4 2048
    fi
    if ! openssl x509 -checkend 86400 -noout -in ${cert_file} &> /dev/null; then
        openssl req -new -x509 ${hash} -key ${key_platform} -out ${cert_file} -days 10000 -subj "$subject"
        openssl pkcs8 -in ${key_platform} -topk8 -outform DER -out ${output_dir}/${cert}.pk8 -nocrypt
    fi
done

# Apex keys
for apex in $(cat _data/apex_keys.txt); do
    subject="/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com"
    key_apex="${output_dir}/${apex}.pem"
    cert_file="${output_dir}/${apex}.certificate.override.x509.pem"
    if [ ! -f ${key_apex} ]; then
        openssl genrsa -out ${key_apex} -f4 4096
    fi
    if ! openssl x509 -checkend 86400 -noout -in ${cert_file} &> /dev/null; then
        openssl req -new -x509 ${hash} -key ${key_apex} -out ${cert_file} -days 10000 -subj "$subject"
        openssl pkcs8 -in ${key_apex} -topk8 -outform DER -out ${output_dir}/${apex}.certificate.override.pk8 -nocrypt
    fi
done

# Generate Makefiles
echo "// DO NOT EDIT THIS FILE MANUALLY" > ${output_dir}/Android.bp

for apex in $(cat _data/apex_keys.txt); do
    echo "" >> ${output_dir}/Android.bp
    echo "android_app_certificate {" >> ${output_dir}/Android.bp
    echo "    name: \"${apex}.certificate.override\"," >> ${output_dir}/Android.bp
    echo "    certificate: \"${apex}.certificate.override\"," >> ${output_dir}/Android.bp
    echo "}" >> ${output_dir}/Android.bp
done

# Generate avb_custom_key
$AVBTOOL extract_public_key \
  --key ${output_dir}/releasekey-private.pem \
  --output avb_custom_key.img

# Generate public key for verification
openssl rsa -in ${output_dir}/releasekey.pem -pubout -out pixysos_pubkey

echo "# DO NOT EDIT THIS FILE MANUALLY" > ${output_dir}/keys.mk
echo "" >> ${output_dir}/keys.mk
echo "PRODUCT_CERTIFICATE_OVERRIDES := \\" >> ${output_dir}/keys.mk
apexes=($(cat _data/apex_keys.txt))
last_index=$(( ${#apexes[@]} - 1 ))
for index in "${!apexes[@]}"; do
    apex=${apexes[$index]}
    if [ $index -eq $last_index ]; then
        echo "    ${apex}:${apex}.certificate.override" >> ${output_dir}/keys.mk
    else
        echo "    ${apex}:${apex}.certificate.override \\" >> ${output_dir}/keys.mk
    fi
done
echo "" >> ${output_dir}/keys.mk
echo "PRODUCT_DEFAULT_DEV_CERTIFICATE := vendor/security/pixys/releasekey" >> ${output_dir}/keys.mk
echo "PRODUCT_OTA_PUBLIC_KEYS := vendor/security/pixys/releasekey.x509.pem" >> ${output_dir}/keys.mk

# Copy BUILD rules to output directory
cp BUILD* ${output_dir}/
